# Nginx 이벤트 모듈을 설정합니다.
events {}

# HTTP 요청과 관련된 설정을 하는 부분입니다.
http {
    upstream spring-server {
        # Docker 네트워크 상에서 컨테이너 이름과 컨테이너 내부의 8080 포트를 사용
        server spring-blue-container:8080 max_fails=5 fail_timeout=30s;
    }

    # 실제 HTTP 서버를 설정하는 부분입니다.
    server {

        listen 80;
        listen [::]:80;

        server_name rong5026.iptime.org;

        # 파일에 인증서 갱신및 저장
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

		# 모든 HTTP 요청을 HTTPS로 리디렉션합니다.
        location / {
                return 301 https://$host$request_uri;
        }
    }

    server {
        # 서버가 443 포트에서 SSL을 사용하여 요청을 수신하도록 설정합니다.
        listen 443 ssl;
        server_name rong5026.iptime.org;

        ssl_certificate /etc/letsencrypt/live/rong5026.iptime.org/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/rong5026.iptime.org/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # 모든 경로에 대한 요청 처리
        location / {
            # 프록시 서버로 요청을 전달할 때 사용하는 헤더 설정
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header HOST $http_host;
            proxy_set_header X-Nginx-Proxy true;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 실제 Spring 서버로 요청 전달
            proxy_pass http://spring-server;

            # 리다이렉션을 처리하지 않도록 설정
            proxy_redirect off;
            # 타임아웃 설정 추가
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }
    }

    # Basic Setting
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}